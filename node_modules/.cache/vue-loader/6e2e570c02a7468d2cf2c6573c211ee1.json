{"remainingRequest":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/Hung/hungg/vue-cli/vuejs-todolist/src/pages/TodoList.vue?vue&type=style&index=0&id=c9fa1eb0&scoped=true&lang=css","dependencies":[{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/src/pages/TodoList.vue","mtime":1619444372463},{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Hung/hungg/vue-cli/vuejs-todolist/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5pc0NvbXBsZXRlIHsKICAgIHRleHQtZGVjb3JhdGlvbjogYmxhY2s7Cn0K"},{"version":3,"sources":["/Users/Hung/hungg/vue-cli/vuejs-todolist/src/pages/TodoList.vue"],"names":[],"mappings":";AA8FA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B","file":"/Users/Hung/hungg/vue-cli/vuejs-todolist/src/pages/TodoList.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n        <InputTodo :currentUser=\"currentUser\" @addTodo=\"addNewTodo\" />\n        <todoContainer :todos=\"todos\" @setDone=\"setDone\" @deleteOne=\"deleteOne\" />\n        <button @click=\"logout\">Log Out</button>\n\n</div>\n</template>\n\n<script>\nimport todoContainer from \"../components/todoContainer\";\nimport InputTodo from \"../components/InputTodo\";\n\nexport default {\n    name: \"TodoList\",\n    components: {\n        todoContainer,\n        InputTodo,\n    },\n\n    data() {\n        return {\n            newTodo: \"\",\n            todos: [],\n            currentUser: {}\n        };\n    },\n    mounted() {\n        let currentUser = JSON.parse(localStorage.getItem(\"currentUser\")) || {};\n        let bags = JSON.parse(localStorage.getItem(\"bags\")) || [];\n\n        let getBag = bags.find((bag) => {\n            return bag.userId === currentUser.userId;\n        })\n        console.log(currentUser.name);\n        console.log(getBag);\n        this.currentUser = currentUser;\n        this.todos = getBag.todos;\n    },\n    methods: {\n        //payload is input newTodo\n        addNewTodo(payload) {\n            let todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\n\n            this.todos.push({\n                id: this.todos.length + 1,\n                title: payload,\n                isComplete: false,\n            });\n            todos.push({\n                id: this.todos.length + 1,\n                title: payload,\n                isComplete: false,\n            })\n            this.updateBags()\n        },\n        setDone(todoId) {\n\n            this.todos = this.todos.map((todo) => {\n                if (todo.id === todoId) {\n                    console.log(todo);\n                    todo.isComplete = !todo.isComplete;\n                }\n                return todo;\n            });\n            this.updateBags()\n        },\n        deleteOne(todoId) {\n\n            console.log(\"Delete One\");\n            this.todos = this.todos.filter((todo) => todo.id !== todoId);\n\n            this.updateBags()\n        },\n        updateBags() {\n            let bags = JSON.parse(localStorage.getItem(\"bags\")) || [];\n\n            bags = bags.map((bag) => {\n                if (bag.userId === this.currentUser.userId) {\n                    bag.todos = this.todos;\n                }\n                return bag;\n            })\n            localStorage.setItem(\"bags\", JSON.stringify(bags));\n        },\n        logout() {\n            this.$router.push(\"/login\");\n            localStorage.removeItem(\"currentUser\");\n        }\n    },\n};\n</script>\n\n<style scoped>\n.isComplete {\n    text-decoration: black;\n}\n</style>\n"]}]}